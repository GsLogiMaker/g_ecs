#!/usr/bin/env python
import os
import sys

from SCons.Script import *
from SCons.Script.SConscript import SConsEnvironment

env:SConsEnvironment = SConscript("include/godot-cpp/SConstruct")

# Settings for speeding up compilation
env.Decider('MD5-timestamp')
env.SetOption('max_drift', 1)
env.SetOption('implicit_cache', 1)

# Compilation commands
env.Tool('compilation_db')
cdb = env.CompilationDatabase()
x = env.Alias('cdb', cdb)
if "cdb" in COMMAND_LINE_TARGETS:
    env._dict["CXXFLAGS"].remove("-fno-gnu-unique")

platform:str = env["platform"]
target:str = env["target"]
suffix:str = env["suffix"]
shlib_suffix:str = env["SHLIBSUFFIX"]

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CXXFLAGS=["-fexceptions"])

env.Append(CPPPATH=["src/"])
env.Append(CPPPATH=["include/flecs/"])
sources = env.Glob("src/*.cpp") + env.Glob("include/flecs/*.c")

if env["platform"] == "macos":
    library = env.SharedLibrary(
        "../bin/libglecs.{}.{}.framework/libglecs.{}.{}".format(
            env["platform"], env["target"], env["platform"], env["target"]
        ),
        source=sources,
    )
else:
    library = env.SharedLibrary(
        "../bin/libglecs{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
        source=sources,
    )

env.Default(library)
