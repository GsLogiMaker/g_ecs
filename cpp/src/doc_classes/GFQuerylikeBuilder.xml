<?xml version="1.0" encoding="UTF-8" ?>
<class name="GFQuerylikeBuilder" inherits="GFEntityBuilder"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		The abstract base class for different query-like builders.
	</brief_description>
	<description>
	</description>
	<tutorials>
		<link title="More on Flecs Queries">https://www.flecs.dev/flecs/md_docs_2Queries</link>
	</tutorials>
	<methods>
		<method name="add">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="entity" type="Variant" />
			<description>
				Overrides [GFEntity.add].
			</description>
		</method>
		<method name="add_pair">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="first" type="Variant" />
			<param index="1" name="second" type="Variant" />
			<description>
				Overrides [GFEntity.add_pair].
			</description>
		</method>
		<method name="cascade">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="traversal" type="Variant" default="0" />
			<description>
			</description>
		</method>
		<method name="descend">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="traversal" type="Variant" default="0" />
			<description>
			</description>
		</method>
		<method name="from">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="entity" type="Variant" />
			<description>
				Sets the source of the most recently added term. Setting the source allows for matching terms against a specific entity. [url=https://www.flecs.dev/flecs/md_docs_2Queries.html#source]More about Flecs sources[/url].
				Example:
				[codeblock]
				var Velocity = GFComponentBuilder.new() \
				    .add_member("velocity", TYPE_VECTOR2) \
				    .build()
				var ship = GFEntity.new() \
				    .add(Velocity)
				var asteroid = GFEntity.new() \
				    .add(Velocity)

				# Query only for Velocity of the ship, not the asteroid
				var query = GFQueryBuilder.new() \
				    .with(Velocity).from(ship) \
				    .build()
				[/codeblock]
			</description>
		</method>
		<method name="io_default">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term to behave with the default IO functionality.
			</description>
		</method>
		<method name="io_filter">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term as a filter. Filter terms do not trigger observers, but they are still be required for an entity to match the query.
			</description>
		</method>
		<method name="io_in">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term read only.
			</description>
		</method>
		<method name="io_inout">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term read and write.
			</description>
		</method>
		<method name="io_none">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term as never accessed. This will also cause the term to not be passed to systems, queryies, or observers.
			</description>
		</method>
		<method name="io_out">
			<return type="GFQuerylikeBuilder" />
			<description>
				Marks the last added term write only.
			</description>
		</method>
		<method name="or_with">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="term" type="Variant" />
			<param index="1" name="second" type="Variant" default="null" />
			<description>
				Adds a term to the query that matches this or one of the previous terms in an [i]or[/i] chain.
				The term added is identified by a [Variant] coerced to an ID. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
			</description>
		</method>
		<method name="set_name">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="name" type="Variant" />
			<description>
				Overrides [GFEntityBuilder.set_name].
			</description>
		</method>
		<method name="set_parent">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="entity" type="Variant" default="0" />
			<description>
				Overrides [GFEntityBuilder.set_parent].
			</description>
		</method>
		<method name="set_target_entity">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="entity" type="Variant" />
			<description>
				Overrides [GFEntityBuilder.set_target_entity].
			</description>
		</method>
		<method name="up">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="traversal" type="Variant" default="0" />
			<description>
				Modifies a term to match in a parent.
				TODO: Add code examples.
			</description>
		</method>
		<method name="with">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="term" type="Variant" />
			<param index="1" name="second" type="Variant" default="null" />
			<description>
				Adds a term to the query.
				The term added is identified by a [Variant] coerced to an ID. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
			</description>
		</method>
		<method name="with_maybe">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="term" type="Variant" />
			<param index="1" name="second" type="Variant" default="null" />
			<description>
				Adds an optional term to the query.
				The term added is identified by a [Variant] coerced to an ID. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
			</description>
		</method>
		<method name="without">
			<return type="GFQuerylikeBuilder" />
			<param index="0" name="term" type="Variant" />
			<param index="1" name="second" type="Variant" default="null" />
			<description>
				Adds a negative term to the query.
				The term added is identified by a [Variant] coerced to an ID. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
			</description>
		</method>
	</methods>
</class>
