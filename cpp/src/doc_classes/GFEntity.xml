<?xml version="1.0" encoding="UTF-8" ?>
<class name="GFEntity" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		A reference to an entity from a [GFWorld].
	</brief_description>
	<description>
	</description>
	<tutorials>
		<link title="More on Flecs Entities">https://www.flecs.dev/flecs/md_docs_2EntitiesComponents.html</link>
	</tutorials>
	<methods>
		<method name="add_component" qualifiers="const vararg">
			<return type="GFEntity" />
			<param index="0" name="component" type="Variant" />
			<description>
				Adds component data of type [param component] to this entity.
				The component's type ID is coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.new()
				entity.add_component(GFPosition2D, Vector2(10, 10))
				entity.get_component(GFPosition2D).get_vec() == Vector2(10, 10) # true
				[/codeblock]
				This method returns [code]self[/code] for chaining.
			</description>
		</method>
		<method name="add_pair" qualifiers="const vararg">
			<return type="GFEntity" />
			<param index="0" name="first" type="Variant" />
			<param index="1" name="second" type="Variant" />
			<description>
				Adds component data to the pair of [param first] and [param second] to
				this entity.
				The component's type ID is coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.new()
				entity.add_pair(GFPosition2D, Vector2(10, 10))
				entity.get_pair(GFPosition2D).get_vec() == Vector2(10, 10) # true
				[/codeblock]
				This method returns [code]self[/code] for chaining.
			</description>
		</method>
		<method name="from" qualifiers="static">
			<return type="GFEntity" />
			<param index="0" name="entity" type="Variant" />
			<param index="1" name="world" type="GFWorld" default="null" />
			<description>
				Returns an entity from an ID coerced from a [Variant].
				If no world is specified, a default world is used.
				To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.from("flecs/core/OnAdd")
				[/codeblock]
			</description>
		</method>
		<method name="from_id" qualifiers="static">
			<return type="GFEntity" />
			<param index="0" name="id" type="int" />
			<param index="1" name="world" type="GFWorld" default="null" />
			<description>
				Returns an entity from an ID.
				If no world is specified, a default world is used.
				[codeblock]
				var entity:= GFEntity.from_id(255)
				[/codeblock]
			</description>
		</method>
		<method name="get_component">
			<return type="GFComponent" />
			<param index="0" name="component" type="Variant" />
			<description>
				Returns a reference to this entity's component's data of type [param component].
				Returns [code]null[/code] if the entity does not have the [param component] attached or if [param component] is not a component. The component is identified by an ID coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.new()
				entity.add_component("glecs/meta/Array")
				entity.get_component("glecs/meta/Array") != null # true
				[/codeblock]
			</description>
		</method>
		<method name="get_id">
			<return type="int" />
			<description>
				Returns the ID of this entity.
				[codeblock]
				var entity:= GFEntity.from_id(42)
				entity.get_id() == 42 # true
				[/codeblock]
			</description>
		</method>
		<method name="get_name">
			<return type="String" />
			<description>
				Returns the name of this entity.
				[codeblock]
				var entity:= GFEntity.new()
				entity.set_name("Entity")
				entity.get_name() == "Entity" # true
				[/codeblock]
			</description>
		</method>
		<method name="get_pair">
			<return type="GFComponent" />
			<param index="0" name="first" type="Variant" />
			<param index="1" name="second" type="Variant" />
			<description>
				Returns a reference to this entity's component's data in the pair
				of [param first] and [param second].
				Returns [code]null[/code] if the entity does not have the [param component] attached or if [param component] is not a component. The component is identified by an ID coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.new()
				entity.add_component("glecs/meta/Array")
				entity.get_component("glecs/meta/Array") != null # true
				[/codeblock]
			</description>
		</method>
		<method name="get_world">
			<return type="GFWorld" />
			<description>
				Returns the world this entity is from.
				[codeblock]
				var world:= GFWorld.new()
				var entity:= GFEntity.new_in_world(world)
				entity.get_world() == world # true
				[/codeblock]
			</description>
		</method>
		<method name="is_alive">
			<return type="bool" />
			<description>
				Returns [code]true[/code] if this entity is still alive.
				[codeblock]
				var entity:= GFEntity.new()
				entity.is_alive() # true
				entity.delete()
				entity.is_alive() # false
				[/codeblock]
			</description>
		</method>
		<method name="is_pair">
			<return type="bool" />
			<description>
				Returns [code]true[/code] if the ID of this entity is a pair.
				[codeblock]
				var world:= GFWorld.new()
				var entity:= GFEntity.from_id(world.pair_ids(1, 2), world)
				entity.is_pair() # true
				[/codeblock]
			</description>
		</method>
		<method name="new_in_world" qualifiers="static">
			<return type="GFEntity" />
			<param index="0" name="world" type="GFWorld" />
			<description>
				Returns a reference to a new entity created within [param world].
				[codeblock]
				var world:= GFWorld.new()
				var entity:= GFEntity.new_in_world(world)
				[/codeblock]
			</description>
		</method>
		<method name="pair">
			<return type="GFPair" />
			<param index="0" name="second" type="Variant" />
			<description>
				Creates a [GFPair] from this entity and [param second].
				[codeblock]
				var Eats:= GFEntity.new()
				var Grass:= GFEntity.new()
				var EatsGrass:GFPair = Eats.pair(Grass)
				[/codeblock]
			</description>
		</method>
		<method name="pair_id">
			<return type="int" />
			<param index="0" name="second_id" type="int" />
			<description>
				Creates a pair ID from this entity and [param second_id].
				[codeblock]
				var Eats:= GFEntity.new()
				var Grass:= GFEntity.new()
				var EatsGrass_id:int = Eats.pair_id(Grass.get_id())
				[/codeblock]
			</description>
		</method>
		<method name="set_component" qualifiers="const vararg">
			<return type="GFEntity" />
			<param index="0" name="component" type="Variant" />
			<description>
				Sets component data of type [param component] in this entity.
				The component's type ID is coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var entity:= GFEntity.new()
				entity.add_component(GFPosition2D)
				entity.set_component(GFPosition2D, Vector2(10, 10))
				entity.get_component(GFPosition2D).get_vec() == Vector2(10, 10) # true
				[/codeblock]
				If the component is not added yet, then this method will add
				it automaticly.
				[codeblock]
				var entity:= GFEntity.new()
				entity.set_component(GFPosition2D, Vector2(10, 10))
				entity.get_component(GFPosition2D).get_vec() == Vector2(10, 10) # true
				[/codeblock]
				This method returns [code]self[/code] for chaining.
			</description>
		</method>
		<method name="set_name">
			<return type="GFEntity" />
			<param index="0" name="name" type="String" />
			<description>
				Sets the name of this entity.
				[codeblock]
				var entity:= GFEntity.new()
				entity.set_name("Entity")
				entity.get_name() == "Entity" # true
				[/codeblock]
				This method returns [code]self[/code] for chaining.
			</description>
		</method>
		<method name="set_pair" qualifiers="const vararg">
			<return type="GFEntity" />
			<param index="0" name="first" type="Variant" />
			<param index="1" name="second" type="Variant" />
			<description>
				Sets component data is this entity from the pair of [param first] and
				[param second].
				The component's type ID is coerced from a [Variant]. To learn more about [Variant] coercion see [method GFWorld.coerce_id].
				[codeblock]
				var start:= GFEntity.new().set_name("Start")
				var entity:= GFEntity.new()
				# Pair will be added if it is not already.
				entity.set_pair(start, GFPosition2D, Vector2(10, 10))
				entity.get_pair(start, GFPosition2D).get_vec() == Vector2(10, 10) # true
				[/codeblock]
				This method returns [code]self[/code] for chaining.
			</description>
		</method>
	</methods>
</class>
