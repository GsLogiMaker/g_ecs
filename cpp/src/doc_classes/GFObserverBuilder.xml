<?xml version="1.0" encoding="UTF-8" ?>
<class name="GFObserverBuilder" inherits="GFQuerylikeBuilder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		A builder for observers.
	</brief_description>
	<description>
		This example shows the creation of an observer that is run whenever either the [i]Run[/i] or [i]Jump[/i] component is added to an entity and that entity has both the [i]Run[/i] and [i]Jump[/i] components:
		[codeblock]
		GFObserverBuilder.new() \
		    .set_events("flecs/core/OnAdd") \
		    .with("Run") \
		    .with("Jump") \
		    .for_each(func(run:GFComponent, jump:GFComponent):
		        pass
		        )
		[/codeblock]
		This example shows the creation of an observer that is run when the [i]Run[/i] component is added to an entity and that has the [i]Jump[/i] component:
		[codeblock]
		GFObserverBuilder.new() \
		    .set_events("flecs/core/OnAdd") \
		    .with("Run") \
		    .with("Jump").access_filter() \
		    .for_each(func(run:GFComponent, jump:GFComponent):
		        pass
		        )
		[/codeblock]
	</description>
	<tutorials>
		<link title="More on Flecs Observers">https://www.flecs.dev/flecs/md_docs_2ObserversManual</link>
	</tutorials>
	<methods>
		<method name="for_each">
			<return type="void" />
			<param index="0" name="callback" type="Callable" />
			<description>
				Builds the observer with a callback for iterating over each result.
			</description>
		</method>
		<method name="new_in_world" qualifiers="static">
			<return type="GFObserverBuilder" />
			<param index="0" name="world" type="GFWorld" />
			<description>
				Returns a new builder in [param world].
			</description>
		</method>
		<method name="set_event">
			<return type="GFObserverBuilder" />
			<param index="0" name="index" type="int" />
			<param index="1" name="event" type="Variant" />
			<description>
				Sets an event this observer listens for at the specified index.
			</description>
		</method>
		<method name="set_events" qualifiers="const vararg">
			<return type="GFObserverBuilder" />
			<description>
				Sets all events this observer listens for.
			</description>
		</method>
	</methods>
</class>
